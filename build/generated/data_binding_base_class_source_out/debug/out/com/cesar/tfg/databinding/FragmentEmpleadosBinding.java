// Generated by view binder compiler. Do not edit!
package com.cesar.tfg.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.cesar.tfg.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.checkbox.MaterialCheckBox;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentEmpleadosBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialButton btnActualizarEmpleado;

  @NonNull
  public final MaterialButton btnCrearEmpleado;

  @NonNull
  public final MaterialButton btnEditarEmpleado;

  @NonNull
  public final MaterialButton btnEliminarEmpleado;

  @NonNull
  public final MaterialButton btnGuardarEmpleado;

  @NonNull
  public final MaterialButton btnVolverEmpleado;

  @NonNull
  public final MaterialCheckBox checkEsJefe;

  @NonNull
  public final TextInputEditText editApellidoEmpleado;

  @NonNull
  public final TextInputEditText editEmailEmpleado;

  @NonNull
  public final TextInputEditText editNombreEmpleado;

  @NonNull
  public final TextInputEditText editPasswordEmpleado;

  @NonNull
  public final LinearLayout layoutCrearEmpleado;

  @NonNull
  public final LinearLayout layoutEditarEmpleado;

  @NonNull
  public final LinearLayout layoutEliminarEmpleado;

  @NonNull
  public final LinearLayout layoutListadoEmpleados;

  @NonNull
  public final LinearLayout main;

  @NonNull
  public final RecyclerView recyclerEditarEmpleado;

  @NonNull
  public final RecyclerView recyclerEliminarEmpleado;

  private FragmentEmpleadosBinding(@NonNull LinearLayout rootView,
      @NonNull MaterialButton btnActualizarEmpleado, @NonNull MaterialButton btnCrearEmpleado,
      @NonNull MaterialButton btnEditarEmpleado, @NonNull MaterialButton btnEliminarEmpleado,
      @NonNull MaterialButton btnGuardarEmpleado, @NonNull MaterialButton btnVolverEmpleado,
      @NonNull MaterialCheckBox checkEsJefe, @NonNull TextInputEditText editApellidoEmpleado,
      @NonNull TextInputEditText editEmailEmpleado, @NonNull TextInputEditText editNombreEmpleado,
      @NonNull TextInputEditText editPasswordEmpleado, @NonNull LinearLayout layoutCrearEmpleado,
      @NonNull LinearLayout layoutEditarEmpleado, @NonNull LinearLayout layoutEliminarEmpleado,
      @NonNull LinearLayout layoutListadoEmpleados, @NonNull LinearLayout main,
      @NonNull RecyclerView recyclerEditarEmpleado,
      @NonNull RecyclerView recyclerEliminarEmpleado) {
    this.rootView = rootView;
    this.btnActualizarEmpleado = btnActualizarEmpleado;
    this.btnCrearEmpleado = btnCrearEmpleado;
    this.btnEditarEmpleado = btnEditarEmpleado;
    this.btnEliminarEmpleado = btnEliminarEmpleado;
    this.btnGuardarEmpleado = btnGuardarEmpleado;
    this.btnVolverEmpleado = btnVolverEmpleado;
    this.checkEsJefe = checkEsJefe;
    this.editApellidoEmpleado = editApellidoEmpleado;
    this.editEmailEmpleado = editEmailEmpleado;
    this.editNombreEmpleado = editNombreEmpleado;
    this.editPasswordEmpleado = editPasswordEmpleado;
    this.layoutCrearEmpleado = layoutCrearEmpleado;
    this.layoutEditarEmpleado = layoutEditarEmpleado;
    this.layoutEliminarEmpleado = layoutEliminarEmpleado;
    this.layoutListadoEmpleados = layoutListadoEmpleados;
    this.main = main;
    this.recyclerEditarEmpleado = recyclerEditarEmpleado;
    this.recyclerEliminarEmpleado = recyclerEliminarEmpleado;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentEmpleadosBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentEmpleadosBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_empleados, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentEmpleadosBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnActualizarEmpleado;
      MaterialButton btnActualizarEmpleado = ViewBindings.findChildViewById(rootView, id);
      if (btnActualizarEmpleado == null) {
        break missingId;
      }

      id = R.id.btnCrearEmpleado;
      MaterialButton btnCrearEmpleado = ViewBindings.findChildViewById(rootView, id);
      if (btnCrearEmpleado == null) {
        break missingId;
      }

      id = R.id.btnEditarEmpleado;
      MaterialButton btnEditarEmpleado = ViewBindings.findChildViewById(rootView, id);
      if (btnEditarEmpleado == null) {
        break missingId;
      }

      id = R.id.btnEliminarEmpleado;
      MaterialButton btnEliminarEmpleado = ViewBindings.findChildViewById(rootView, id);
      if (btnEliminarEmpleado == null) {
        break missingId;
      }

      id = R.id.btnGuardarEmpleado;
      MaterialButton btnGuardarEmpleado = ViewBindings.findChildViewById(rootView, id);
      if (btnGuardarEmpleado == null) {
        break missingId;
      }

      id = R.id.btnVolverEmpleado;
      MaterialButton btnVolverEmpleado = ViewBindings.findChildViewById(rootView, id);
      if (btnVolverEmpleado == null) {
        break missingId;
      }

      id = R.id.checkEsJefe;
      MaterialCheckBox checkEsJefe = ViewBindings.findChildViewById(rootView, id);
      if (checkEsJefe == null) {
        break missingId;
      }

      id = R.id.editApellidoEmpleado;
      TextInputEditText editApellidoEmpleado = ViewBindings.findChildViewById(rootView, id);
      if (editApellidoEmpleado == null) {
        break missingId;
      }

      id = R.id.editEmailEmpleado;
      TextInputEditText editEmailEmpleado = ViewBindings.findChildViewById(rootView, id);
      if (editEmailEmpleado == null) {
        break missingId;
      }

      id = R.id.editNombreEmpleado;
      TextInputEditText editNombreEmpleado = ViewBindings.findChildViewById(rootView, id);
      if (editNombreEmpleado == null) {
        break missingId;
      }

      id = R.id.editPasswordEmpleado;
      TextInputEditText editPasswordEmpleado = ViewBindings.findChildViewById(rootView, id);
      if (editPasswordEmpleado == null) {
        break missingId;
      }

      id = R.id.layoutCrearEmpleado;
      LinearLayout layoutCrearEmpleado = ViewBindings.findChildViewById(rootView, id);
      if (layoutCrearEmpleado == null) {
        break missingId;
      }

      id = R.id.layoutEditarEmpleado;
      LinearLayout layoutEditarEmpleado = ViewBindings.findChildViewById(rootView, id);
      if (layoutEditarEmpleado == null) {
        break missingId;
      }

      id = R.id.layoutEliminarEmpleado;
      LinearLayout layoutEliminarEmpleado = ViewBindings.findChildViewById(rootView, id);
      if (layoutEliminarEmpleado == null) {
        break missingId;
      }

      id = R.id.layoutListadoEmpleados;
      LinearLayout layoutListadoEmpleados = ViewBindings.findChildViewById(rootView, id);
      if (layoutListadoEmpleados == null) {
        break missingId;
      }

      LinearLayout main = (LinearLayout) rootView;

      id = R.id.recyclerEditarEmpleado;
      RecyclerView recyclerEditarEmpleado = ViewBindings.findChildViewById(rootView, id);
      if (recyclerEditarEmpleado == null) {
        break missingId;
      }

      id = R.id.recyclerEliminarEmpleado;
      RecyclerView recyclerEliminarEmpleado = ViewBindings.findChildViewById(rootView, id);
      if (recyclerEliminarEmpleado == null) {
        break missingId;
      }

      return new FragmentEmpleadosBinding((LinearLayout) rootView, btnActualizarEmpleado,
          btnCrearEmpleado, btnEditarEmpleado, btnEliminarEmpleado, btnGuardarEmpleado,
          btnVolverEmpleado, checkEsJefe, editApellidoEmpleado, editEmailEmpleado,
          editNombreEmpleado, editPasswordEmpleado, layoutCrearEmpleado, layoutEditarEmpleado,
          layoutEliminarEmpleado, layoutListadoEmpleados, main, recyclerEditarEmpleado,
          recyclerEliminarEmpleado);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
