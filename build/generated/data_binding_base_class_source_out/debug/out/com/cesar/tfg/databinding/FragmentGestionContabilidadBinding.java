// Generated by view binder compiler. Do not edit!
package com.cesar.tfg.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.cesar.tfg.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentGestionContabilidadBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialButton btnHistorico;

  @NonNull
  public final MaterialButton btnHoy;

  @NonNull
  public final MaterialButton btnRango;

  @NonNull
  public final FrameLayout contenedorContabilidad;

  private FragmentGestionContabilidadBinding(@NonNull LinearLayout rootView,
      @NonNull MaterialButton btnHistorico, @NonNull MaterialButton btnHoy,
      @NonNull MaterialButton btnRango, @NonNull FrameLayout contenedorContabilidad) {
    this.rootView = rootView;
    this.btnHistorico = btnHistorico;
    this.btnHoy = btnHoy;
    this.btnRango = btnRango;
    this.contenedorContabilidad = contenedorContabilidad;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentGestionContabilidadBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentGestionContabilidadBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_gestion_contabilidad, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentGestionContabilidadBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnHistorico;
      MaterialButton btnHistorico = ViewBindings.findChildViewById(rootView, id);
      if (btnHistorico == null) {
        break missingId;
      }

      id = R.id.btnHoy;
      MaterialButton btnHoy = ViewBindings.findChildViewById(rootView, id);
      if (btnHoy == null) {
        break missingId;
      }

      id = R.id.btnRango;
      MaterialButton btnRango = ViewBindings.findChildViewById(rootView, id);
      if (btnRango == null) {
        break missingId;
      }

      id = R.id.contenedorContabilidad;
      FrameLayout contenedorContabilidad = ViewBindings.findChildViewById(rootView, id);
      if (contenedorContabilidad == null) {
        break missingId;
      }

      return new FragmentGestionContabilidadBinding((LinearLayout) rootView, btnHistorico, btnHoy,
          btnRango, contenedorContabilidad);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
